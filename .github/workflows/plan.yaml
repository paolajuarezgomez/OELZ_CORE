name: Terraform Plan

on:
  pull_request:
    branches: 
      - main 
   
jobs:
 job1:
    name: 'Terraform plan'
    env:
     GITHUB_TOKEN: ${{ secrets.TOKEN }}
     TF_VAR_fingerprint:  ${{ secrets.API_FINGERPRINT }}
     TF_VAR_user_id:  ${{ secrets.USER_ID }}
     TF_ACTION_WORKSPACE: "default"
            
    #runs-on: [self-hosted, pjuarez]
    runs-on: ubuntu-latest
    
    steps:
    - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "üêß This job is now running on a ${{ runner.name }} server hosted by GitHub!"
    - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    
    #Checkout the repository to the GitHub Actions runner
    - name: Check out repository code
      uses: actions/checkout@v3
            
    - uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
   
    - name: git clone OE repo
      run: git clone git@github.com:paolajuarezgomez/LZ-TEMPLATES.git LZ_OE
      
    - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
    - run: echo  "The workflow is now ready to test your code on the runner."
    - name: List files in the repository
      run: |
         ls ${{ github.workspace }}
         ls ${{ github.workspace }}/LZ_OE
        
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1.3.2
    
    - name: Terraform Fmt
      id: fmt
      run: terraform fmt
      
    - name: Terraform Init
      id: init
      run: terraform init
      
    - name: Terraform validate
      id: validate
      run: terraform validate
      
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -var-file  ${{ github.workspace }}/LZ_OE/terraform-oelz-templates-examples/patterns/OELZ/examples/lz_central_operations_repo_example/LZ_OPS_CENTRAL_REPO/SHARED-PJUAREZ/oci-credentials.tfvars.json -var-file  ${{ github.workspace }}/LZ_OE/terraform-oelz-templates-examples/patterns/OELZ/examples/lz_central_operations_repo_example/LZ_OPS_CENTRAL_REPO/SHARED-PJUAREZ/oelz_shared_security.auto.tfvars.json -var-file  ${{ github.workspace }}/LZ_OE/terraform-oelz-templates-examples/patterns/OELZ/examples/lz_central_operations_repo_example/LZ_OPS_CENTRAL_REPO/SHARED-PJUAREZ/oelz_shared_network.auto.tfvars.json -state  ${{ github.workspace }}/LZ_OE/terraform-oelz-templates-examples/patterns/OELZ/examples/lz_central_operations_repo_example/LZ_OPS_CENTRAL_REPO/SHARED-PJUAREZ/terraform.tfstate 

    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome}}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`${process.env.PLAN}\`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })    
  
      
      
